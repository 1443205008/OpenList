name: Dev Branch Auto Build

on:
  push:
    branches: ["dev"]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    name: Build Linux ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            target: linux-amd64-musl
          - arch: arm64
            target: linux-arm64-musl
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get short SHA
        uses: benjlevesque/short-sha@v3.0
        id: short-sha

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Setup web frontend (dev)
        run: bash build.sh dev web
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build for Linux ${{ matrix.arch }}
        uses: OpenListTeam/cgo-actions@v1.1.2
        with:
          targets: ${{ matrix.target }}
          musl-target-format: $os-$musl-$arch
          out-dir: build
          output: openlist-$target$ext
          x-flags: |
            github.com/OpenListTeam/OpenList/v4/internal/conf.BuiltAt=$built_at
            github.com/OpenListTeam/OpenList/v4/internal/conf.GitAuthor=OpenList
            github.com/OpenListTeam/OpenList/v4/internal/conf.GitCommit=$git_commit
            github.com/OpenListTeam/OpenList/v4/internal/conf.Version=dev-${{ steps.short-sha.outputs.sha }}
            github.com/OpenListTeam/OpenList/v4/internal/conf.WebVersion=dev

      - name: Compress
        run: |
          bash build.sh zip md5-${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openlist-dev-${{ steps.short-sha.outputs.sha }}-linux-${{ matrix.arch }}
          path: build/*
          retention-days: 30
          compression-level: 9

      - name: Upload compressed artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: openlist-dev-compressed-${{ steps.short-sha.outputs.sha }}-${{ matrix.target }}
          path: build/compress/*
          retention-days: 7
          compression-level: 0

  release:
    name: Create Dev Release
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get short SHA
        uses: benjlevesque/short-sha@v3.0
        id: short-sha

      - name: Download all compressed artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: openlist-dev-compressed-${{ steps.short-sha.outputs.sha }}-*
          path: release-assets
          merge-multiple: true

      - name: Create or update dev tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -d dev || true
          git push origin --delete dev || true
          git tag dev ${{ github.sha }}
          git push origin dev

      - name: Create dev release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: dev
          name: "Dev Build - ${{ steps.short-sha.outputs.sha }}"
          body: |
            🚧 **Development Build** 🚧
            
            This is an automated development build from the `dev` branch.
            
            **⚠️ Warning:** This is a development version and may be unstable or contain bugs.
            
            **Build Information:**
            - **Branch:** `dev`
            - **Commit:** `${{ github.sha }}`
            - **Short SHA:** `${{ steps.short-sha.outputs.sha }}`
            - **Build Date:** `${{ github.event.head_commit.timestamp }}`
            
            **Available Platforms:**
            - Linux AMD64 (x86_64)
            - Linux ARM64 (aarch64)
            
            **Changes in this build:**
            ${{ github.event.head_commit.message }}
            
            ---
            
            💡 **For stable releases, please use the [latest release](https://github.com/${{ github.repository }}/releases/latest) instead.**
          files: release-assets/*
          prerelease: true
          make_latest: false

  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [build, release]
    if: always()
    steps:
      - name: Get short SHA
        uses: benjlevesque/short-sha@v3.0
        id: short-sha

      - name: Build Results Summary
        run: |
          echo "## 🚀 Dev Branch Build Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** \`dev\`" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Short SHA:** \`${{ steps.short-sha.outputs.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Built Platforms:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Linux AMD64 (x86_64)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Linux ARM64 (aarch64)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Download Options:" >> $GITHUB_STEP_SUMMARY
          echo "1. **GitHub Release (Recommended):** [Dev Release](https://github.com/${{ github.repository }}/releases/tag/dev)" >> $GITHUB_STEP_SUMMARY
          echo "2. **Artifacts:** Check the **Artifacts** section below for raw build files" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.release.result }}" == "success" ]]; then
            echo "### 🎉 Release Status:" >> $GITHUB_STEP_SUMMARY
            echo "✅ Dev release created successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ⚠️ Release Status:" >> $GITHUB_STEP_SUMMARY
            echo "❌ Dev release creation failed. Binaries are still available in Artifacts." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "> 📝 These are development builds with the latest frontend assets and may be unstable." >> $GITHUB_STEP_SUMMARY
